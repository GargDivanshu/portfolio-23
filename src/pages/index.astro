---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Toolbar from "../components/Toolbar.astro";
import Hero from "../components/Hero/index.astro";
import Stack from "../components/Stack/index.astro";
import About from "../components/About/index.astro";
import Experience from '../components/Experience/index.astro'
import Navbar from '../components/Navbar/index.astro'
---

<!-- <link rel="stylesheet" href="https://unpkg.com/sheryjs/dist/Shery.css" /> -->
<Layout title="Welcome to Astro.">
  <div class="cursor"></div>
  <Navbar/>
  <Hero />

  <div 
  class="h-full md:w-[65%] w-full relative home">


    <div class="absolute overflow-y-hidden h-[15vh] md:w-4/5 w-full mx-auto inset-y-1/2 right-0 left-0">
      <div class="relative changingText">
      </div>
    </div>
  </div>

 <About/>

  

  


  <div
  style={{
    font: 'Inter',
  }}
    class="h-fit w-[100%] mx-auto relative flex gallery align-middle justify-center"
  >
    <div class="left h-fit w-1/2 text-white">


      <div class="h-[100vh] colorBox text-[#1A1A1A]" data-color="#FAE1EE">
        <div class="m-auto h-[100vh] w-4/5 flex flex-col align-middle items-center p-[10%]">
         <div class="text-left text-textPink align-middle items-center my-auto">
          <h1 class="text-[1.9em] font-base my-auto">Blithe Chat App</h1>
          <div class="my-auto">
            <div class="flex flex-col">
            <p class="text-blackPrimary/80">
              A peer-to-peer instant real-time messaging application with user authentication, enabling seamless user search, friend
requests, and efficient communication
            </p>
          </div>
          </div>
        </div>
        </div>
      </div>


      <div class="h-[100vh] colorBox" data-color="#E0F0FF">
        <div class="m-auto h-[100vh] w-4/5 flex flex-col align-middle items-center p-[10%]">
          <div class="text-left text-textBlue align-middle items-center my-auto">
           <h1 class="text-[1.9em] font-base my-auto">Analytical Dashboard</h1>
           <div class="my-auto">
             <div class="flex flex-col">
             <p class="text-blackPrimary/80">
               A dashboard that provides a comprehensive overview of the company's performance, enabling the user to analyze the data
             </p>
           </div>
           </div>
         </div>
         </div>
      </div>

      <div class="h-[100vh] colorBox cursor-scale" data-color="#FFEDE0"> 
        <div class="m-auto h-[100vh] w-4/5 flex flex-col align-middle items-center p-[10%]">
          <div class="text-left text-textOrange align-middle items-center my-auto">
           <h1 class="text-[1.9em] font-base my-auto">Blog App</h1>
           <div class="my-auto">
             <div class="flex flex-col">
             <p class="text-blackPrimary/80">
              Developed a modern Blog App leveraging GraphQL and GraphCMS to empower administrators with effortless con-
              tent management and engage users through commenting functionality.
             </p>
           </div>
           </div>
         </div>
         </div>  
      </div>


    </div>


    <div class="right h-[100vh] w-1/2 relative pin-panel">
      <div
        class="bg-white rounded-[3rem] absolute top-0 bottom-0 h-[80vh] w-[90%] m-auto leftGallery "
      >
        <div class="p-[10%] rounded-[3rem] h-full w-full border-inherit flex flex-col vertImg ">
          <section class=" bg-red-600 min-w-[45vw] translate-x-[-5vw] min-h-[80vh] translate-y-[-10vh] rounded-[3rem] card1">

          </section>

          <section class=" bg-green-600 min-w-[45vw] translate-x-[-5vw] min-h-[80vh] translate-y-[-10vh] rounded-[3rem] card2">

          </section>

          <section class=" bg-blue-600 min-w-[45vw] translate-x-[-5vw] min-h-[80vh] translate-y-[-10vh] rounded-[3rem] card3">

          </section>
        </div>
      </div>
    </div>
  </div>
  <div class="endGallery"></div>
  <Experience />
  
    <Stack />
  

  
  <Toolbar />
</Layout>

<!-- <script  type="text/javascript"  src="https://unpkg.com/sheryjs/dist/Shery.js"></script> -->
<script
  is:inline
  src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>

<script
  is:inline
  src="https://cdn.jsdelivr.net/npm/@studio-freight/lenis@1.0.27/dist/lenis.min.js"
></script>
<!-- Scroll Trigger is needed for Scroll Effects -->
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js" ></script> -->

<!-- Three.js is needed for 3d Effects -->
<script
  is:inline
  src="https://cdnjs.cloudflare.com/ajax/libs/three.js/0.155.0/three.min.js"
></script>

<!-- ControlKit is needed for Debug Panel -->
<script
  src="https://cdn.jsdelivr.net/gh/automat/controlkit.js@master/bin/controlKit.min.js"
  is:inline
  type="text/javascript"></script>
<script
  is:inline
  src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"
></script>
<script is:inline src="https://unpkg.com/split-type"></script>

<script type="text/javascript">
  var cursor = document.querySelector(".cursor"),
    cursorScale = document.querySelectorAll(".cursor-scale"),
    changeText = document.querySelector(".changingText"),
    upper = document.querySelector(".upper"),
    lower = document.querySelector(".lower"),
    intro = changeText.querySelectorAll("div"),
    mouseX = 0,
    mouseY = 0;

  gsap.to({}, 0.016, {
    repeat: -1,
    onRepeat: function () {
      gsap.set(cursor, {
        css: {
          left: mouseX,
          top: mouseY,
        },
      });
    },
  });

  window.addEventListener("mousemove", function (e) {
    mouseX = e.clientX;
    mouseY = e.clientY;
  });

  cursorScale.forEach((link) => {
    link.addEventListener("mouseleave", () => {
      cursor.classList.remove("grow");
    });
    link.addEventListener("mousemove", () => {
      cursor.classList.add("grow");
    });
  });

  var h1s = document.querySelectorAll("#intro");
  var index = 0;
  document.querySelector("main").addEventListener("click", function () {
    gsap.to(h1s[index], {
      y: "-=100%",
      duration: 1,
      ease: Expo.easeInOut,
      onComplete: function () {
        gsap.set(this._targets[0], {
          y: index !== 0 ? "100%" : "0%",
        });
      },
    });
    index === h1s.length - 1 ? (index = 0) : index++;
    gsap.to(h1s[index], {
      y: "-=100%",
      duration: 1,
      ease: Expo.easeInOut,
    });
  });
</script>


<script>
  import gsap from 'gsap'

  gsap.registerPlugin(ScrollTrigger);

const cards = gsap.utils.toArray(".vertImg section");
const spacer = 20;

ScrollTrigger.create({
  trigger: '.card1',
  start: 'center center',
  markers: true,
  pin: '.card1',
})
// const tl = gsap.timeline()
// tl.from('card1', {
//   yPercent: -100,
// }).from('card2', {
//   yPercent: -100,
// }).from('card3', {
//   yPercent: -100,
// })

// ScrollTrigger.create({
//   trigger: '.gallery',
//   animation: tl,
//   start: 'top top',
//   end: 'bottom bottom',
//   scrub: true,
// })

// gsap.to(cards, {
//   yPercent: -100,
//   ease: 'none',
//   scrollTrigger: {
//     trigger: '.left',
//   }
// })

// gsap.to(cards, {
//   scrollTrigger: '.gallery',
//   y: -1*document.querySelector('.right').offsetHeight,
// })



// cards.forEach((card, index) => {
//   ScrollTrigger.create({
//     trigger: card,
//     start: `top-=${index * spacer} top+=10px`,
//     endTrigger: ".pin-panel",
//     end: `bottom top+=${200 + cards.length * spacer}`,
//     pin: true,
//     pinSpacing: false,
//     markers: true,
//     id: "card-pin",
//     invalidateOnRefresh: true
//   });
// });


  // gsap.registerPlugin(ScrollTrigger);
  // gsap.to('.right', {
  //   ScrollTrigger: {
  //     trigger: 'gallery',
  //     top: 'top top',
  //     end: 'bottom bottom',
  //   }, 
  //   y: -document.querySelector('.right').offsetHeight,
  // })
//   const vertImg = gsap.utils.toArray(".vertImg")
//   const spacer = 20
//   const leftGallery = document.querySelector(".gallery")

//   vertImg.forEach((card, index) => {
  
//   ScrollTrigger.create({
//     trigger: '.gallery',
//     // start: `top-=${index * spacer} top+=10px`,
//     endTrigger: '.endGallery',
//     // end: `bottom top+=${200 + (vertImg.length * spacer)}`,
//     // pin: true,
//     // pinSpacing: false,
//     markers: true,
//    // id: 'card-pin',
//     invalidateOnRefresh: true,
//   });
// });
  


</script>
<script>
  import gsap from 'gsap'
  import SplitType from 'split-type';
  


  gsap.registerPlugin(ScrollTrigger);

  const splitTypes = document.querySelectorAll(".revealType");
  splitTypes.forEach((char) => {
    const text = new SplitType(char, { types: "chars" });


    gsap.from(text.chars, {
      scrollTrigger: {
        trigger: char,
        start: "top 75%",
        end: "top 20%",
        scrub: true,
        markers: false,
        toggleActions: "play play reverse reverse",
      },
      opacity: 0.2,
      stagger: 0.1,
      // scaleY: 0,
      // y: -20,
      // transformOrigin: 'bottom',
      // opacity: 0.2,
      // stagger: 0.1
    });
  });

  // ScrollTrigger.create({
  //   trigger: ".gallery",
  //   start: "top top",
  //   end: "bottom bottom",
  //   // scrub: true,
  //   pin: ".right",
  //   // markers: true,
  //   // toggleActions: 'play play reverse reverse'
  // });
  
  


  const lenis = new Lenis();

  function raf(time) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }

  requestAnimationFrame(raf);
</script>

<script>
  const coloredBoxes = document.querySelectorAll('.colorBox');

window.addEventListener('scroll', () => {
  coloredBoxes.forEach(box => {
    if (
      box.getBoundingClientRect().top <= document.body.scrollTop
    ) {
      document.body.style.backgroundColor = box.dataset.color;
      document.body.style.transition = '0.5s';
    }
  });
});

</script>

<style>
@import url('https://fonts.googleapis.com/css2?family=Acme&family=Archivo&family=Audiowide&family=Black+Ops+One&family=Cinzel&family=Cookie&family=DM+Serif+Display&family=Dancing+Script&family=Great+Vibes&family=Indie+Flower&family=Inter&family=Kaushan+Script&family=Pacifico&family=Permanent+Marker&family=Philosopher&family=Poppins:wght@200&family=Raleway&family=Rowdies&family=Russo+One&family=Satisfy&family=Tangerine&family=Tourney&family=Ultra&family=Vina+Sans&family=Work+Sans:wght@300;900&family=Zeyada&display=swap');
  body {
    text: #1a1a1a;
  }
  main {
    margin: auto;
    padding: 1rem;
    /* width: 800px; */
    /* max-width: calc(100% - 2rem); */
    color: white;
    /* font-size: 20px; */
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    /* font-size: 4rem; */
    /* font-weight: 700; */
    line-height: 1;
    /* text-align: center; */
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
  .cursor {
    border-radius: 50%;
    width: 40px;
    height: 40px;
    position: fixed;
    margin-left: -20px;
    margin-top: -20px;
    border: 4px solid #ff568d;
    transition: transform 0.2s ease-in-out;
    pointer-events: none;
    z-index: 1000;
    transform-origin: center center;
  }
  .grow,
  .grow-small {
    transform: scale(3);
    background: #f8e8ee;
    mix-blend-mode: difference;
    border: none;
  }
  .grow-small {
    transform: scale(2.5);
  }
  .floating {
    animation-name: floating;
    animation-duration: 3s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
    margin-left: 30px;
    margin-top: 5px;
  }

  @keyframes floating {
    0% {
      transform: translate(0, 0px);
    }
    50% {
      transform: translate(0, 5vh);
    }
    100% {
      transform: translate(0, -0px);
    }
  }
  /* .upper::before{
	opacity: 1;
	content: "writing code";
	mix-blend-mode: difference;
}
.changingText:hover .upper {
	opacity: 0;
	mix-blend-mode: difference;
}

.lower::before{
	opacity: 0;
	content: "I have been breaking code";
	mix-blend-mode: difference;
}
.changingText:hover .lower {
	opacity: 1;
	content: "I have been breaking code";
	mix-blend-mode: difference;
} */
</style>
